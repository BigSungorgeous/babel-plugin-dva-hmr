import { join } from 'path';

function getHmrString(appName, routerPath) {
  return `
(function() {
  // Generated by babel-plugin-dva-hmr
  console.log('[HMR] inited with babel-plugin-dva-hmr');
  ${appName}.router(require('${routerPath}'));
  ${appName}.use({
    onHmr(render) {
      if (module.hot) {
        const renderNormally = render;
        const renderException = (error) => {
          const RedBox = require('redbox-react');
          ReactDOM.render(React.createElement(RedBox, { error: error }), document.getElementById('root'));
        };
        const newRender = (router) => {
          try {
            renderNormally(router);
          } catch (error) {
            console.error('error', error);
            renderException(error);
          }
        };
        module.hot.accept('${routerPath}', () => {
          const router = require('${routerPath}');
          newRender(router);
        });
      }
    },  
  });
})()
    `;
}

export default function ({ types:t }) {
  let isAdded = false;

  function isMemberExpression(node, objectName, propertyName) {
    if (!t.isMemberExpression(node)) return false;
    const { object, property } = node;
    return (
      ( t.isIdentifier(object) && object.name === objectName) &&
      ( t.isIdentifier(property) && property.name === propertyName )
    );
  }

  function getRouterPath(node) {
    switch (node.type) {
      case 'CallExpression':
        if (t.isLiteral(node.arguments[0])) {
          return node.arguments[0].value;
        }
        break;
      default:
        break;
    }
    console.warn(`[babel-plugin-dva-hmr][WARN] can't get router path for ${node.type}`);
  }

  return {
    visitor: {
      Program: {},
      CallExpression(path, { opts }) {
        if (isAdded) return;
        const { callee, arguments: args } = path.node;
        if (isMemberExpression(callee, 'app', 'router')) {
          const routerPath = getRouterPath(args[0]);
          if (routerPath) {
            isAdded = true;
            !opts.quiet && console.info(`[babel-plugin-dva-hmr][INFO] got routerPath ${routerPath}`);
            path.parentPath.replaceWithSourceString(getHmrString('app', routerPath));
          }
        }
      },
    },
  };
}
